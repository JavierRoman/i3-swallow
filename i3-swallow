#!/usr/bin/env python3

import i3ipc
import subprocess
import os
from threading import Timer
from time import sleep
from sys import argv,stderr

i3 = i3ipc.Connection()

swallowed = False
dont_return = False

if len(argv) == 1:
    print("i3-swallow [-d] cmd arg1...")
    print(" -d Don't return window on exit")
    exit()
else:
    if argv[1] == "-d":
        dont_return = True;

def on_window_open(i3,e):
    process.poll()
    global swallowed
    global dont_return
    if not swallowed and process.returncode is None:
        node.command('focus; move scratchpad')
        global window_id
        window_id = e.container.id
        swallowed = True
        if dont_return:
            i3.main_quit()

def on_window_close(i3,e):
    sleep(0.1)
    process.poll()
    if swallowed and not (process.returncode is None):
        cmd = "scratchpad show; floating toggle;"
        node.command(cmd)
        exit()

def check_process():
    process.poll()
    if not swallowed and not (process.returncode is None):
        print("i3-swallow: no process attached", file=stderr)
        i3.main_quit()

node = i3.get_tree().find_focused()

command = ""
if dont_return:
    command = argv[2:(len(argv))]
else:
    command = argv[1:(len(argv))]

i3.on("window::new",on_window_open)

if dont_return == False:
    i3.on("window::close",on_window_close)

Timer(0.5,check_process).start()

process = subprocess.Popen(" ".join(command), shell=True, stdout=subprocess.PIPE)
process.poll()
if not (process.returncode is None):
    exit(process.returncode)

i3.main()
